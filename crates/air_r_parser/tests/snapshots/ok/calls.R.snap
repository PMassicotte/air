---
source: crates/air_r_parser/tests/spec_test.rs
expression: snapshot
---
## Input

```R
fn()
fn(a)
fn(a, b)
fn(...)
fn(a, ..., b)

fn(a = 1)
fn(a = )

fn(a = 1, b = 2)
fn(a = , b = 2)

fn(... = 1)
fn(... =)

fn("arg" = 1)
fn("arg" =)

# Comma tests
fn(,)
fn(,,,)
fn(,,a,,b,,)

# Comment tests
fn(
  # comment
)
fn(,
  # comment
,)
fn(
  a, # comment1
  b # comment2
)
fn(
  a # comment1
  = # comment2
  1 # comment3
)

{expr}(a = 1)

```


## AST

```
RRoot {
    bom_token: missing (optional),
    expressions: RExpressionList [
        RCall {
            function: RIdentifier {
                name_token: IDENT@0..2 "fn" [] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@2..3 "(" [] [],
                items: RArgumentList [],
                r_paren_token: R_PAREN@3..4 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@4..7 "fn" [Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@7..8 "(" [] [],
                items: RArgumentList [
                    RUnnamedArgument {
                        value: RIdentifier {
                            name_token: IDENT@8..9 "a" [] [],
                        },
                    },
                ],
                r_paren_token: R_PAREN@9..10 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@10..13 "fn" [Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@13..14 "(" [] [],
                items: RArgumentList [
                    RUnnamedArgument {
                        value: RIdentifier {
                            name_token: IDENT@14..15 "a" [] [],
                        },
                    },
                    RComma {
                        value_token: COMMA@15..16 "," [] [],
                    },
                    RUnnamedArgument {
                        value: RIdentifier {
                            name_token: IDENT@16..18 "b" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_paren_token: R_PAREN@18..19 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@19..22 "fn" [Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@22..23 "(" [] [],
                items: RArgumentList [
                    RDotsArgument {
                        value_token: DOTS@23..26 "..." [] [],
                    },
                ],
                r_paren_token: R_PAREN@26..27 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@27..30 "fn" [Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@30..31 "(" [] [],
                items: RArgumentList [
                    RUnnamedArgument {
                        value: RIdentifier {
                            name_token: IDENT@31..32 "a" [] [],
                        },
                    },
                    RComma {
                        value_token: COMMA@32..33 "," [] [],
                    },
                    RDotsArgument {
                        value_token: DOTS@33..37 "..." [Whitespace(" ")] [],
                    },
                    RComma {
                        value_token: COMMA@37..38 "," [] [],
                    },
                    RUnnamedArgument {
                        value: RIdentifier {
                            name_token: IDENT@38..40 "b" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_paren_token: R_PAREN@40..41 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@41..45 "fn" [Newline("\n"), Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@45..46 "(" [] [],
                items: RArgumentList [
                    RNamedArgument {
                        name: RIdentifier {
                            name_token: IDENT@46..47 "a" [] [],
                        },
                        eq_token: EQUAL@47..49 "=" [Whitespace(" ")] [],
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@49..51 "1" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_paren_token: R_PAREN@51..52 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@52..55 "fn" [Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@55..56 "(" [] [],
                items: RArgumentList [
                    RNamedArgument {
                        name: RIdentifier {
                            name_token: IDENT@56..57 "a" [] [],
                        },
                        eq_token: EQUAL@57..59 "=" [Whitespace(" ")] [],
                        value: missing (optional),
                    },
                ],
                r_paren_token: R_PAREN@59..61 ")" [Whitespace(" ")] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@61..65 "fn" [Newline("\n"), Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@65..66 "(" [] [],
                items: RArgumentList [
                    RNamedArgument {
                        name: RIdentifier {
                            name_token: IDENT@66..67 "a" [] [],
                        },
                        eq_token: EQUAL@67..69 "=" [Whitespace(" ")] [],
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@69..71 "1" [Whitespace(" ")] [],
                        },
                    },
                    RComma {
                        value_token: COMMA@71..72 "," [] [],
                    },
                    RNamedArgument {
                        name: RIdentifier {
                            name_token: IDENT@72..74 "b" [Whitespace(" ")] [],
                        },
                        eq_token: EQUAL@74..76 "=" [Whitespace(" ")] [],
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@76..78 "2" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_paren_token: R_PAREN@78..79 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@79..82 "fn" [Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@82..83 "(" [] [],
                items: RArgumentList [
                    RNamedArgument {
                        name: RIdentifier {
                            name_token: IDENT@83..84 "a" [] [],
                        },
                        eq_token: EQUAL@84..86 "=" [Whitespace(" ")] [],
                        value: missing (optional),
                    },
                    RComma {
                        value_token: COMMA@86..88 "," [Whitespace(" ")] [],
                    },
                    RNamedArgument {
                        name: RIdentifier {
                            name_token: IDENT@88..90 "b" [Whitespace(" ")] [],
                        },
                        eq_token: EQUAL@90..92 "=" [Whitespace(" ")] [],
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@92..94 "2" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_paren_token: R_PAREN@94..95 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@95..99 "fn" [Newline("\n"), Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@99..100 "(" [] [],
                items: RArgumentList [
                    RNamedArgument {
                        name: RDots {
                            value_token: DOTS@100..103 "..." [] [],
                        },
                        eq_token: EQUAL@103..105 "=" [Whitespace(" ")] [],
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@105..107 "1" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_paren_token: R_PAREN@107..108 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@108..111 "fn" [Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@111..112 "(" [] [],
                items: RArgumentList [
                    RNamedArgument {
                        name: RDots {
                            value_token: DOTS@112..115 "..." [] [],
                        },
                        eq_token: EQUAL@115..117 "=" [Whitespace(" ")] [],
                        value: missing (optional),
                    },
                ],
                r_paren_token: R_PAREN@117..118 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@118..122 "fn" [Newline("\n"), Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@122..123 "(" [] [],
                items: RArgumentList [
                    RNamedArgument {
                        name: RStringValue {
                            value_token: R_STRING_LITERAL@123..128 "\"arg\"" [] [],
                        },
                        eq_token: EQUAL@128..130 "=" [Whitespace(" ")] [],
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@130..132 "1" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_paren_token: R_PAREN@132..133 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@133..136 "fn" [Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@136..137 "(" [] [],
                items: RArgumentList [
                    RNamedArgument {
                        name: RStringValue {
                            value_token: R_STRING_LITERAL@137..142 "\"arg\"" [] [],
                        },
                        eq_token: EQUAL@142..144 "=" [Whitespace(" ")] [],
                        value: missing (optional),
                    },
                ],
                r_paren_token: R_PAREN@144..145 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@145..163 "fn" [Newline("\n"), Newline("\n"), Comments("# Comma tests"), Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@163..164 "(" [] [],
                items: RArgumentList [
                    RComma {
                        value_token: COMMA@164..165 "," [] [],
                    },
                ],
                r_paren_token: R_PAREN@165..166 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@166..169 "fn" [Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@169..170 "(" [] [],
                items: RArgumentList [
                    RComma {
                        value_token: COMMA@170..171 "," [] [],
                    },
                    RComma {
                        value_token: COMMA@171..172 "," [] [],
                    },
                    RComma {
                        value_token: COMMA@172..173 "," [] [],
                    },
                ],
                r_paren_token: R_PAREN@173..174 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@174..177 "fn" [Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@177..178 "(" [] [],
                items: RArgumentList [
                    RComma {
                        value_token: COMMA@178..179 "," [] [],
                    },
                    RComma {
                        value_token: COMMA@179..180 "," [] [],
                    },
                    RUnnamedArgument {
                        value: RIdentifier {
                            name_token: IDENT@180..181 "a" [] [],
                        },
                    },
                    RComma {
                        value_token: COMMA@181..182 "," [] [],
                    },
                    RComma {
                        value_token: COMMA@182..183 "," [] [],
                    },
                    RUnnamedArgument {
                        value: RIdentifier {
                            name_token: IDENT@183..184 "b" [] [],
                        },
                    },
                    RComma {
                        value_token: COMMA@184..185 "," [] [],
                    },
                    RComma {
                        value_token: COMMA@185..186 "," [] [],
                    },
                ],
                r_paren_token: R_PAREN@186..187 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@187..207 "fn" [Newline("\n"), Newline("\n"), Comments("# Comment tests"), Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@207..208 "(" [] [],
                items: RArgumentList [],
                r_paren_token: R_PAREN@208..222 ")" [Newline("\n"), Whitespace("  "), Comments("# comment"), Newline("\n")] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@222..225 "fn" [Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@225..226 "(" [] [],
                items: RArgumentList [
                    RComma {
                        value_token: COMMA@226..227 "," [] [],
                    },
                    RComma {
                        value_token: COMMA@227..241 "," [Newline("\n"), Whitespace("  "), Comments("# comment"), Newline("\n")] [],
                    },
                ],
                r_paren_token: R_PAREN@241..242 ")" [] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@242..245 "fn" [Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@245..246 "(" [] [],
                items: RArgumentList [
                    RUnnamedArgument {
                        value: RIdentifier {
                            name_token: IDENT@246..250 "a" [Newline("\n"), Whitespace("  ")] [],
                        },
                    },
                    RComma {
                        value_token: COMMA@250..262 "," [] [Whitespace(" "), Comments("# comment1")],
                    },
                    RUnnamedArgument {
                        value: RIdentifier {
                            name_token: IDENT@262..277 "b" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment2")],
                        },
                    },
                ],
                r_paren_token: R_PAREN@277..279 ")" [Newline("\n")] [],
            },
        },
        RCall {
            function: RIdentifier {
                name_token: IDENT@279..282 "fn" [Newline("\n")] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@282..283 "(" [] [],
                items: RArgumentList [
                    RNamedArgument {
                        name: RIdentifier {
                            name_token: IDENT@283..298 "a" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment1")],
                        },
                        eq_token: EQUAL@298..313 "=" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment2")],
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@313..328 "1" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment3")],
                        },
                    },
                ],
                r_paren_token: R_PAREN@328..330 ")" [Newline("\n")] [],
            },
        },
        RCall {
            function: RBracedExpressions {
                l_curly_token: L_CURLY@330..333 "{" [Newline("\n"), Newline("\n")] [],
                expressions: RExpressionList [
                    RIdentifier {
                        name_token: IDENT@333..337 "expr" [] [],
                    },
                ],
                r_curly_token: R_CURLY@337..338 "}" [] [],
            },
            arguments: RCallArguments {
                l_paren_token: L_PAREN@338..339 "(" [] [],
                items: RArgumentList [
                    RNamedArgument {
                        name: RIdentifier {
                            name_token: IDENT@339..340 "a" [] [],
                        },
                        eq_token: EQUAL@340..342 "=" [Whitespace(" ")] [],
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@342..344 "1" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_paren_token: R_PAREN@344..345 ")" [] [],
            },
        },
    ],
    eof_token: EOF@345..346 "" [Newline("\n")] [],
}
```

## CST

```
0: R_ROOT@0..346
  0: (empty)
  1: R_EXPRESSION_LIST@0..345
    0: R_CALL@0..4
      0: R_IDENTIFIER@0..2
        0: IDENT@0..2 "fn" [] []
      1: R_CALL_ARGUMENTS@2..4
        0: L_PAREN@2..3 "(" [] []
        1: R_ARGUMENT_LIST@3..3
        2: R_PAREN@3..4 ")" [] []
    1: R_CALL@4..10
      0: R_IDENTIFIER@4..7
        0: IDENT@4..7 "fn" [Newline("\n")] []
      1: R_CALL_ARGUMENTS@7..10
        0: L_PAREN@7..8 "(" [] []
        1: R_ARGUMENT_LIST@8..9
          0: R_UNNAMED_ARGUMENT@8..9
            0: R_IDENTIFIER@8..9
              0: IDENT@8..9 "a" [] []
        2: R_PAREN@9..10 ")" [] []
    2: R_CALL@10..19
      0: R_IDENTIFIER@10..13
        0: IDENT@10..13 "fn" [Newline("\n")] []
      1: R_CALL_ARGUMENTS@13..19
        0: L_PAREN@13..14 "(" [] []
        1: R_ARGUMENT_LIST@14..18
          0: R_UNNAMED_ARGUMENT@14..15
            0: R_IDENTIFIER@14..15
              0: IDENT@14..15 "a" [] []
          1: R_COMMA@15..16
            0: COMMA@15..16 "," [] []
          2: R_UNNAMED_ARGUMENT@16..18
            0: R_IDENTIFIER@16..18
              0: IDENT@16..18 "b" [Whitespace(" ")] []
        2: R_PAREN@18..19 ")" [] []
    3: R_CALL@19..27
      0: R_IDENTIFIER@19..22
        0: IDENT@19..22 "fn" [Newline("\n")] []
      1: R_CALL_ARGUMENTS@22..27
        0: L_PAREN@22..23 "(" [] []
        1: R_ARGUMENT_LIST@23..26
          0: R_DOTS_ARGUMENT@23..26
            0: DOTS@23..26 "..." [] []
        2: R_PAREN@26..27 ")" [] []
    4: R_CALL@27..41
      0: R_IDENTIFIER@27..30
        0: IDENT@27..30 "fn" [Newline("\n")] []
      1: R_CALL_ARGUMENTS@30..41
        0: L_PAREN@30..31 "(" [] []
        1: R_ARGUMENT_LIST@31..40
          0: R_UNNAMED_ARGUMENT@31..32
            0: R_IDENTIFIER@31..32
              0: IDENT@31..32 "a" [] []
          1: R_COMMA@32..33
            0: COMMA@32..33 "," [] []
          2: R_DOTS_ARGUMENT@33..37
            0: DOTS@33..37 "..." [Whitespace(" ")] []
          3: R_COMMA@37..38
            0: COMMA@37..38 "," [] []
          4: R_UNNAMED_ARGUMENT@38..40
            0: R_IDENTIFIER@38..40
              0: IDENT@38..40 "b" [Whitespace(" ")] []
        2: R_PAREN@40..41 ")" [] []
    5: R_CALL@41..52
      0: R_IDENTIFIER@41..45
        0: IDENT@41..45 "fn" [Newline("\n"), Newline("\n")] []
      1: R_CALL_ARGUMENTS@45..52
        0: L_PAREN@45..46 "(" [] []
        1: R_ARGUMENT_LIST@46..51
          0: R_NAMED_ARGUMENT@46..51
            0: R_IDENTIFIER@46..47
              0: IDENT@46..47 "a" [] []
            1: EQUAL@47..49 "=" [Whitespace(" ")] []
            2: R_DOUBLE_VALUE@49..51
              0: R_DOUBLE_LITERAL@49..51 "1" [Whitespace(" ")] []
        2: R_PAREN@51..52 ")" [] []
    6: R_CALL@52..61
      0: R_IDENTIFIER@52..55
        0: IDENT@52..55 "fn" [Newline("\n")] []
      1: R_CALL_ARGUMENTS@55..61
        0: L_PAREN@55..56 "(" [] []
        1: R_ARGUMENT_LIST@56..59
          0: R_NAMED_ARGUMENT@56..59
            0: R_IDENTIFIER@56..57
              0: IDENT@56..57 "a" [] []
            1: EQUAL@57..59 "=" [Whitespace(" ")] []
            2: (empty)
        2: R_PAREN@59..61 ")" [Whitespace(" ")] []
    7: R_CALL@61..79
      0: R_IDENTIFIER@61..65
        0: IDENT@61..65 "fn" [Newline("\n"), Newline("\n")] []
      1: R_CALL_ARGUMENTS@65..79
        0: L_PAREN@65..66 "(" [] []
        1: R_ARGUMENT_LIST@66..78
          0: R_NAMED_ARGUMENT@66..71
            0: R_IDENTIFIER@66..67
              0: IDENT@66..67 "a" [] []
            1: EQUAL@67..69 "=" [Whitespace(" ")] []
            2: R_DOUBLE_VALUE@69..71
              0: R_DOUBLE_LITERAL@69..71 "1" [Whitespace(" ")] []
          1: R_COMMA@71..72
            0: COMMA@71..72 "," [] []
          2: R_NAMED_ARGUMENT@72..78
            0: R_IDENTIFIER@72..74
              0: IDENT@72..74 "b" [Whitespace(" ")] []
            1: EQUAL@74..76 "=" [Whitespace(" ")] []
            2: R_DOUBLE_VALUE@76..78
              0: R_DOUBLE_LITERAL@76..78 "2" [Whitespace(" ")] []
        2: R_PAREN@78..79 ")" [] []
    8: R_CALL@79..95
      0: R_IDENTIFIER@79..82
        0: IDENT@79..82 "fn" [Newline("\n")] []
      1: R_CALL_ARGUMENTS@82..95
        0: L_PAREN@82..83 "(" [] []
        1: R_ARGUMENT_LIST@83..94
          0: R_NAMED_ARGUMENT@83..86
            0: R_IDENTIFIER@83..84
              0: IDENT@83..84 "a" [] []
            1: EQUAL@84..86 "=" [Whitespace(" ")] []
            2: (empty)
          1: R_COMMA@86..88
            0: COMMA@86..88 "," [Whitespace(" ")] []
          2: R_NAMED_ARGUMENT@88..94
            0: R_IDENTIFIER@88..90
              0: IDENT@88..90 "b" [Whitespace(" ")] []
            1: EQUAL@90..92 "=" [Whitespace(" ")] []
            2: R_DOUBLE_VALUE@92..94
              0: R_DOUBLE_LITERAL@92..94 "2" [Whitespace(" ")] []
        2: R_PAREN@94..95 ")" [] []
    9: R_CALL@95..108
      0: R_IDENTIFIER@95..99
        0: IDENT@95..99 "fn" [Newline("\n"), Newline("\n")] []
      1: R_CALL_ARGUMENTS@99..108
        0: L_PAREN@99..100 "(" [] []
        1: R_ARGUMENT_LIST@100..107
          0: R_NAMED_ARGUMENT@100..107
            0: R_DOTS@100..103
              0: DOTS@100..103 "..." [] []
            1: EQUAL@103..105 "=" [Whitespace(" ")] []
            2: R_DOUBLE_VALUE@105..107
              0: R_DOUBLE_LITERAL@105..107 "1" [Whitespace(" ")] []
        2: R_PAREN@107..108 ")" [] []
    10: R_CALL@108..118
      0: R_IDENTIFIER@108..111
        0: IDENT@108..111 "fn" [Newline("\n")] []
      1: R_CALL_ARGUMENTS@111..118
        0: L_PAREN@111..112 "(" [] []
        1: R_ARGUMENT_LIST@112..117
          0: R_NAMED_ARGUMENT@112..117
            0: R_DOTS@112..115
              0: DOTS@112..115 "..." [] []
            1: EQUAL@115..117 "=" [Whitespace(" ")] []
            2: (empty)
        2: R_PAREN@117..118 ")" [] []
    11: R_CALL@118..133
      0: R_IDENTIFIER@118..122
        0: IDENT@118..122 "fn" [Newline("\n"), Newline("\n")] []
      1: R_CALL_ARGUMENTS@122..133
        0: L_PAREN@122..123 "(" [] []
        1: R_ARGUMENT_LIST@123..132
          0: R_NAMED_ARGUMENT@123..132
            0: R_STRING_VALUE@123..128
              0: R_STRING_LITERAL@123..128 "\"arg\"" [] []
            1: EQUAL@128..130 "=" [Whitespace(" ")] []
            2: R_DOUBLE_VALUE@130..132
              0: R_DOUBLE_LITERAL@130..132 "1" [Whitespace(" ")] []
        2: R_PAREN@132..133 ")" [] []
    12: R_CALL@133..145
      0: R_IDENTIFIER@133..136
        0: IDENT@133..136 "fn" [Newline("\n")] []
      1: R_CALL_ARGUMENTS@136..145
        0: L_PAREN@136..137 "(" [] []
        1: R_ARGUMENT_LIST@137..144
          0: R_NAMED_ARGUMENT@137..144
            0: R_STRING_VALUE@137..142
              0: R_STRING_LITERAL@137..142 "\"arg\"" [] []
            1: EQUAL@142..144 "=" [Whitespace(" ")] []
            2: (empty)
        2: R_PAREN@144..145 ")" [] []
    13: R_CALL@145..166
      0: R_IDENTIFIER@145..163
        0: IDENT@145..163 "fn" [Newline("\n"), Newline("\n"), Comments("# Comma tests"), Newline("\n")] []
      1: R_CALL_ARGUMENTS@163..166
        0: L_PAREN@163..164 "(" [] []
        1: R_ARGUMENT_LIST@164..165
          0: R_COMMA@164..165
            0: COMMA@164..165 "," [] []
        2: R_PAREN@165..166 ")" [] []
    14: R_CALL@166..174
      0: R_IDENTIFIER@166..169
        0: IDENT@166..169 "fn" [Newline("\n")] []
      1: R_CALL_ARGUMENTS@169..174
        0: L_PAREN@169..170 "(" [] []
        1: R_ARGUMENT_LIST@170..173
          0: R_COMMA@170..171
            0: COMMA@170..171 "," [] []
          1: R_COMMA@171..172
            0: COMMA@171..172 "," [] []
          2: R_COMMA@172..173
            0: COMMA@172..173 "," [] []
        2: R_PAREN@173..174 ")" [] []
    15: R_CALL@174..187
      0: R_IDENTIFIER@174..177
        0: IDENT@174..177 "fn" [Newline("\n")] []
      1: R_CALL_ARGUMENTS@177..187
        0: L_PAREN@177..178 "(" [] []
        1: R_ARGUMENT_LIST@178..186
          0: R_COMMA@178..179
            0: COMMA@178..179 "," [] []
          1: R_COMMA@179..180
            0: COMMA@179..180 "," [] []
          2: R_UNNAMED_ARGUMENT@180..181
            0: R_IDENTIFIER@180..181
              0: IDENT@180..181 "a" [] []
          3: R_COMMA@181..182
            0: COMMA@181..182 "," [] []
          4: R_COMMA@182..183
            0: COMMA@182..183 "," [] []
          5: R_UNNAMED_ARGUMENT@183..184
            0: R_IDENTIFIER@183..184
              0: IDENT@183..184 "b" [] []
          6: R_COMMA@184..185
            0: COMMA@184..185 "," [] []
          7: R_COMMA@185..186
            0: COMMA@185..186 "," [] []
        2: R_PAREN@186..187 ")" [] []
    16: R_CALL@187..222
      0: R_IDENTIFIER@187..207
        0: IDENT@187..207 "fn" [Newline("\n"), Newline("\n"), Comments("# Comment tests"), Newline("\n")] []
      1: R_CALL_ARGUMENTS@207..222
        0: L_PAREN@207..208 "(" [] []
        1: R_ARGUMENT_LIST@208..208
        2: R_PAREN@208..222 ")" [Newline("\n"), Whitespace("  "), Comments("# comment"), Newline("\n")] []
    17: R_CALL@222..242
      0: R_IDENTIFIER@222..225
        0: IDENT@222..225 "fn" [Newline("\n")] []
      1: R_CALL_ARGUMENTS@225..242
        0: L_PAREN@225..226 "(" [] []
        1: R_ARGUMENT_LIST@226..241
          0: R_COMMA@226..227
            0: COMMA@226..227 "," [] []
          1: R_COMMA@227..241
            0: COMMA@227..241 "," [Newline("\n"), Whitespace("  "), Comments("# comment"), Newline("\n")] []
        2: R_PAREN@241..242 ")" [] []
    18: R_CALL@242..279
      0: R_IDENTIFIER@242..245
        0: IDENT@242..245 "fn" [Newline("\n")] []
      1: R_CALL_ARGUMENTS@245..279
        0: L_PAREN@245..246 "(" [] []
        1: R_ARGUMENT_LIST@246..277
          0: R_UNNAMED_ARGUMENT@246..250
            0: R_IDENTIFIER@246..250
              0: IDENT@246..250 "a" [Newline("\n"), Whitespace("  ")] []
          1: R_COMMA@250..262
            0: COMMA@250..262 "," [] [Whitespace(" "), Comments("# comment1")]
          2: R_UNNAMED_ARGUMENT@262..277
            0: R_IDENTIFIER@262..277
              0: IDENT@262..277 "b" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment2")]
        2: R_PAREN@277..279 ")" [Newline("\n")] []
    19: R_CALL@279..330
      0: R_IDENTIFIER@279..282
        0: IDENT@279..282 "fn" [Newline("\n")] []
      1: R_CALL_ARGUMENTS@282..330
        0: L_PAREN@282..283 "(" [] []
        1: R_ARGUMENT_LIST@283..328
          0: R_NAMED_ARGUMENT@283..328
            0: R_IDENTIFIER@283..298
              0: IDENT@283..298 "a" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment1")]
            1: EQUAL@298..313 "=" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment2")]
            2: R_DOUBLE_VALUE@313..328
              0: R_DOUBLE_LITERAL@313..328 "1" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment3")]
        2: R_PAREN@328..330 ")" [Newline("\n")] []
    20: R_CALL@330..345
      0: R_BRACED_EXPRESSIONS@330..338
        0: L_CURLY@330..333 "{" [Newline("\n"), Newline("\n")] []
        1: R_EXPRESSION_LIST@333..337
          0: R_IDENTIFIER@333..337
            0: IDENT@333..337 "expr" [] []
        2: R_CURLY@337..338 "}" [] []
      1: R_CALL_ARGUMENTS@338..345
        0: L_PAREN@338..339 "(" [] []
        1: R_ARGUMENT_LIST@339..344
          0: R_NAMED_ARGUMENT@339..344
            0: R_IDENTIFIER@339..340
              0: IDENT@339..340 "a" [] []
            1: EQUAL@340..342 "=" [Whitespace(" ")] []
            2: R_DOUBLE_VALUE@342..344
              0: R_DOUBLE_LITERAL@342..344 "1" [Whitespace(" ")] []
        2: R_PAREN@344..345 ")" [] []
  2: EOF@345..346 "" [Newline("\n")] []

```
